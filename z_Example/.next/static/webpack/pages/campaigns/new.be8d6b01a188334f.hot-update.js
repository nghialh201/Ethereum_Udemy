"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/campaigns/new",{

/***/ "./node_modules/next/dist/shared/lib/router/utils/parse-url.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/parse-url.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.parseUrl = parseUrl;\nvar _querystring = __webpack_require__(/*! ./querystring */ \"./node_modules/next/dist/shared/lib/router/utils/querystring.js\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./parse-relative-url */ \"./node_modules/next/dist/shared/lib/router/utils/parse-relative-url.js\");\nfunction parseUrl(url) {\n    if (url.startsWith(\"/\")) {\n        return (0, _parseRelativeUrl).parseRelativeUrl(url);\n    }\n    var parsedURL = new URL(url);\n    return {\n        hash: parsedURL.hash,\n        hostname: parsedURL.hostname,\n        href: parsedURL.href,\n        pathname: parsedURL.pathname,\n        port: parsedURL.port,\n        protocol: parsedURL.protocol,\n        query: (0, _querystring).searchParamsToUrlQuery(parsedURL.searchParams),\n        search: parsedURL.search\n    };\n} //# sourceMappingURL=parse-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXVybC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLEtBQUssRUFBRSxJQUFJO0NBQ2QsRUFBQyxDQUFDO0FBQ0hELGdCQUFnQixHQUFHRSxRQUFRLENBQUM7QUFDNUIsSUFBSUMsWUFBWSxHQUFHQyxtQkFBTyxDQUFDLHNGQUFlLENBQUM7QUFDM0MsSUFBSUMsaUJBQWlCLEdBQUdELG1CQUFPLENBQUMsb0dBQXNCLENBQUM7QUFDdkQsU0FBU0YsUUFBUSxDQUFDSSxHQUFHLEVBQUU7SUFDbkIsSUFBSUEsR0FBRyxDQUFDQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDckIsT0FBTyxDQUFDLENBQUMsRUFBRUYsaUJBQWlCLEVBQUVHLGdCQUFnQixDQUFDRixHQUFHLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBQ0QsSUFBTUcsU0FBUyxHQUFHLElBQUlDLEdBQUcsQ0FBQ0osR0FBRyxDQUFDO0lBQzlCLE9BQU87UUFDSEssSUFBSSxFQUFFRixTQUFTLENBQUNFLElBQUk7UUFDcEJDLFFBQVEsRUFBRUgsU0FBUyxDQUFDRyxRQUFRO1FBQzVCQyxJQUFJLEVBQUVKLFNBQVMsQ0FBQ0ksSUFBSTtRQUNwQkMsUUFBUSxFQUFFTCxTQUFTLENBQUNLLFFBQVE7UUFDNUJDLElBQUksRUFBRU4sU0FBUyxDQUFDTSxJQUFJO1FBQ3BCQyxRQUFRLEVBQUVQLFNBQVMsQ0FBQ08sUUFBUTtRQUM1QkMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFZCxZQUFZLEVBQUVlLHNCQUFzQixDQUFDVCxTQUFTLENBQUNVLFlBQVksQ0FBQztRQUN2RUMsTUFBTSxFQUFFWCxTQUFTLENBQUNXLE1BQU07S0FDM0IsQ0FBQztBQUNOLENBQUMsQ0FFRCxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXJzZS11cmwuanM/Nzk1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucGFyc2VVcmwgPSBwYXJzZVVybDtcbnZhciBfcXVlcnlzdHJpbmcgPSByZXF1aXJlKFwiLi9xdWVyeXN0cmluZ1wiKTtcbnZhciBfcGFyc2VSZWxhdGl2ZVVybCA9IHJlcXVpcmUoXCIuL3BhcnNlLXJlbGF0aXZlLXVybFwiKTtcbmZ1bmN0aW9uIHBhcnNlVXJsKHVybCkge1xuICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICAgIHJldHVybiAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwodXJsKTtcbiAgICB9XG4gICAgY29uc3QgcGFyc2VkVVJMID0gbmV3IFVSTCh1cmwpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGhhc2g6IHBhcnNlZFVSTC5oYXNoLFxuICAgICAgICBob3N0bmFtZTogcGFyc2VkVVJMLmhvc3RuYW1lLFxuICAgICAgICBocmVmOiBwYXJzZWRVUkwuaHJlZixcbiAgICAgICAgcGF0aG5hbWU6IHBhcnNlZFVSTC5wYXRobmFtZSxcbiAgICAgICAgcG9ydDogcGFyc2VkVVJMLnBvcnQsXG4gICAgICAgIHByb3RvY29sOiBwYXJzZWRVUkwucHJvdG9jb2wsXG4gICAgICAgIHF1ZXJ5OiAoMCwgX3F1ZXJ5c3RyaW5nKS5zZWFyY2hQYXJhbXNUb1VybFF1ZXJ5KHBhcnNlZFVSTC5zZWFyY2hQYXJhbXMpLFxuICAgICAgICBzZWFyY2g6IHBhcnNlZFVSTC5zZWFyY2hcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS11cmwuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicGFyc2VVcmwiLCJfcXVlcnlzdHJpbmciLCJyZXF1aXJlIiwiX3BhcnNlUmVsYXRpdmVVcmwiLCJ1cmwiLCJzdGFydHNXaXRoIiwicGFyc2VSZWxhdGl2ZVVybCIsInBhcnNlZFVSTCIsIlVSTCIsImhhc2giLCJob3N0bmFtZSIsImhyZWYiLCJwYXRobmFtZSIsInBvcnQiLCJwcm90b2NvbCIsInF1ZXJ5Iiwic2VhcmNoUGFyYW1zVG9VcmxRdWVyeSIsInNlYXJjaFBhcmFtcyIsInNlYXJjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/utils/parse-url.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/utils/path-match.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/path-match.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getPathMatch = getPathMatch;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _pathToRegexp = __webpack_require__(/*! next/dist/compiled/path-to-regexp */ \"./node_modules/next/dist/compiled/path-to-regexp/index.js\");\nfunction getPathMatch(path, options) {\n    var keys = [];\n    var regexp = (0, _pathToRegexp).pathToRegexp(path, keys, {\n        delimiter: \"/\",\n        sensitive: false,\n        strict: options == null ? void 0 : options.strict\n    });\n    var matcher = (0, _pathToRegexp).regexpToFunction((options == null ? void 0 : options.regexModifier) ? new RegExp(options.regexModifier(regexp.source), regexp.flags) : regexp, keys);\n    /**\n   * A matcher function that will check if a given pathname matches the path\n   * given in the builder function. When the path does not match it will return\n   * `false` but if it does it will return an object with the matched params\n   * merged with the params provided in the second argument.\n   */ return function(pathname, params) {\n        var res = pathname == null ? false : matcher(pathname);\n        if (!res) {\n            return false;\n        }\n        /**\n     * If unnamed params are not allowed they must be removed from\n     * the matched parameters. path-to-regexp uses \"string\" for named and\n     * \"number\" for unnamed parameters.\n     */ if (options == null ? void 0 : options.removeUnnamedParams) {\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var key = _step.value;\n                    if (typeof key.name === \"number\") {\n                        delete res.params[key.name];\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n        return _extends({}, params, res.params);\n    };\n} //# sourceMappingURL=path-match.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhdGgtbWF0Y2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxLQUFLLEVBQUUsSUFBSTtDQUNkLEVBQUMsQ0FBQztBQUNIRCxvQkFBb0IsR0FBR0UsWUFBWSxDQUFDO0FBQ3BDLElBQUlDLFFBQVEsR0FBR0MsbUhBQStDO0FBQzlELElBQUlFLGFBQWEsR0FBR0YsbUJBQU8sQ0FBQyxvR0FBbUMsQ0FBQztBQUNoRSxTQUFTRixZQUFZLENBQUNLLElBQUksRUFBRUMsT0FBTyxFQUFFO0lBQ2pDLElBQU1DLElBQUksR0FBRyxFQUFFO0lBQ2YsSUFBTUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFSixhQUFhLEVBQUVLLFlBQVksQ0FBQ0osSUFBSSxFQUFFRSxJQUFJLEVBQUU7UUFDdkRHLFNBQVMsRUFBRSxHQUFHO1FBQ2RDLFNBQVMsRUFBRSxLQUFLO1FBQ2hCQyxNQUFNLEVBQUVOLE9BQU8sSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdBLE9BQU8sQ0FBQ00sTUFBTTtLQUNwRCxDQUFDO0lBQ0YsSUFBTUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFVCxhQUFhLEVBQUVVLGdCQUFnQixDQUFDLENBQUNSLE9BQU8sSUFBSSxJQUFJLEdBQUcsS0FBSyxDQUFDLEdBQUdBLE9BQU8sQ0FBQ1MsYUFBYSxJQUFJLElBQUlDLE1BQU0sQ0FBQ1YsT0FBTyxDQUFDUyxhQUFhLENBQUNQLE1BQU0sQ0FBQ1MsTUFBTSxDQUFDLEVBQUVULE1BQU0sQ0FBQ1UsS0FBSyxDQUFDLEdBQUdWLE1BQU0sRUFBRUQsSUFBSSxDQUFDO0lBQ3ZMOzs7OztHQUtELEdBQUcsT0FBTyxTQUFDWSxRQUFRLEVBQUVDLE1BQU0sRUFBRztRQUN6QixJQUFNQyxHQUFHLEdBQUdGLFFBQVEsSUFBSSxJQUFJLEdBQUcsS0FBSyxHQUFHTixPQUFPLENBQUNNLFFBQVEsQ0FBQztRQUN4RCxJQUFJLENBQUNFLEdBQUcsRUFBRTtZQUNOLE9BQU8sS0FBSyxDQUFDO1FBQ2pCLENBQUM7UUFDRDs7OztLQUlILEdBQUcsSUFBSWYsT0FBTyxJQUFJLElBQUksR0FBRyxLQUFLLENBQUMsR0FBR0EsT0FBTyxDQUFDZ0IsbUJBQW1CLEVBQUU7Z0JBQ25ELHlCQUFTLFNBQVQsaUJBQVMsVUFBVCxjQUFTOztnQkFBZCxRQUFLLFNBQVMsR0FBSWYsSUFBSSxxQkFBakIsS0FBUyxJQUFULHlCQUFTLElBQVQsS0FBUyxHQUFULFNBQVMsZ0JBQVQseUJBQVMsUUFBUztvQkFBbEIsSUFBTWdCLEdBQUcsR0FBVCxLQUFTO29CQUNWLElBQUksT0FBT0EsR0FBRyxDQUFDQyxJQUFJLEtBQUssUUFBUSxFQUFFO3dCQUM5QixPQUFPSCxHQUFHLENBQUNELE1BQU0sQ0FBQ0csR0FBRyxDQUFDQyxJQUFJLENBQUMsQ0FBQztvQkFDaEMsQ0FBQztnQkFDTCxDQUFDOztnQkFKSSxpQkFBUztnQkFBVCxjQUFTOzs7eUJBQVQseUJBQVMsSUFBVCxTQUFTO3dCQUFULFNBQVM7Ozt3QkFBVCxpQkFBUzs4QkFBVCxjQUFTOzs7O1FBS2xCLENBQUM7UUFDRCxPQUFPdkIsUUFBUSxDQUFDLEVBQUUsRUFBRW1CLE1BQU0sRUFBRUMsR0FBRyxDQUFDRCxNQUFNLENBQUMsQ0FBQztJQUM1QyxDQUFDLENBQUM7QUFDTixDQUFDLENBRUQsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1tYXRjaC5qcz8xMjk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXRQYXRoTWF0Y2ggPSBnZXRQYXRoTWF0Y2g7XG52YXIgX2V4dGVuZHMgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qc1wiKS5kZWZhdWx0O1xudmFyIF9wYXRoVG9SZWdleHAgPSByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3BhdGgtdG8tcmVnZXhwXCIpO1xuZnVuY3Rpb24gZ2V0UGF0aE1hdGNoKHBhdGgsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBrZXlzID0gW107XG4gICAgY29uc3QgcmVnZXhwID0gKDAsIF9wYXRoVG9SZWdleHApLnBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCB7XG4gICAgICAgIGRlbGltaXRlcjogJy8nLFxuICAgICAgICBzZW5zaXRpdmU6IGZhbHNlLFxuICAgICAgICBzdHJpY3Q6IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuc3RyaWN0XG4gICAgfSk7XG4gICAgY29uc3QgbWF0Y2hlciA9ICgwLCBfcGF0aFRvUmVnZXhwKS5yZWdleHBUb0Z1bmN0aW9uKChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnJlZ2V4TW9kaWZpZXIpID8gbmV3IFJlZ0V4cChvcHRpb25zLnJlZ2V4TW9kaWZpZXIocmVnZXhwLnNvdXJjZSksIHJlZ2V4cC5mbGFncykgOiByZWdleHAsIGtleXMpO1xuICAgIC8qKlxuICAgKiBBIG1hdGNoZXIgZnVuY3Rpb24gdGhhdCB3aWxsIGNoZWNrIGlmIGEgZ2l2ZW4gcGF0aG5hbWUgbWF0Y2hlcyB0aGUgcGF0aFxuICAgKiBnaXZlbiBpbiB0aGUgYnVpbGRlciBmdW5jdGlvbi4gV2hlbiB0aGUgcGF0aCBkb2VzIG5vdCBtYXRjaCBpdCB3aWxsIHJldHVyblxuICAgKiBgZmFsc2VgIGJ1dCBpZiBpdCBkb2VzIGl0IHdpbGwgcmV0dXJuIGFuIG9iamVjdCB3aXRoIHRoZSBtYXRjaGVkIHBhcmFtc1xuICAgKiBtZXJnZWQgd2l0aCB0aGUgcGFyYW1zIHByb3ZpZGVkIGluIHRoZSBzZWNvbmQgYXJndW1lbnQuXG4gICAqLyByZXR1cm4gKHBhdGhuYW1lLCBwYXJhbXMpPT57XG4gICAgICAgIGNvbnN0IHJlcyA9IHBhdGhuYW1lID09IG51bGwgPyBmYWxzZSA6IG1hdGNoZXIocGF0aG5hbWUpO1xuICAgICAgICBpZiAoIXJlcykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIC8qKlxuICAgICAqIElmIHVubmFtZWQgcGFyYW1zIGFyZSBub3QgYWxsb3dlZCB0aGV5IG11c3QgYmUgcmVtb3ZlZCBmcm9tXG4gICAgICogdGhlIG1hdGNoZWQgcGFyYW1ldGVycy4gcGF0aC10by1yZWdleHAgdXNlcyBcInN0cmluZ1wiIGZvciBuYW1lZCBhbmRcbiAgICAgKiBcIm51bWJlclwiIGZvciB1bm5hbWVkIHBhcmFtZXRlcnMuXG4gICAgICovIGlmIChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnJlbW92ZVVubmFtZWRQYXJhbXMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIGtleXMpe1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Yga2V5Lm5hbWUgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSByZXMucGFyYW1zW2tleS5uYW1lXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBwYXJhbXMsIHJlcy5wYXJhbXMpO1xuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtbWF0Y2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0UGF0aE1hdGNoIiwiX2V4dGVuZHMiLCJyZXF1aXJlIiwiZGVmYXVsdCIsIl9wYXRoVG9SZWdleHAiLCJwYXRoIiwib3B0aW9ucyIsImtleXMiLCJyZWdleHAiLCJwYXRoVG9SZWdleHAiLCJkZWxpbWl0ZXIiLCJzZW5zaXRpdmUiLCJzdHJpY3QiLCJtYXRjaGVyIiwicmVnZXhwVG9GdW5jdGlvbiIsInJlZ2V4TW9kaWZpZXIiLCJSZWdFeHAiLCJzb3VyY2UiLCJmbGFncyIsInBhdGhuYW1lIiwicGFyYW1zIiwicmVzIiwicmVtb3ZlVW5uYW1lZFBhcmFtcyIsImtleSIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/utils/path-match.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/utils/prepare-destination.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/prepare-destination.js ***!
  \*******************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _slicedToArray = (__webpack_require__(/*! @swc/helpers/lib/_sliced_to_array.js */ \"./node_modules/@swc/helpers/lib/_sliced_to_array.js\")[\"default\"]);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.matchHas = matchHas;\nexports.compileNonPath = compileNonPath;\nexports.prepareDestination = prepareDestination;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _pathToRegexp = __webpack_require__(/*! next/dist/compiled/path-to-regexp */ \"./node_modules/next/dist/compiled/path-to-regexp/index.js\");\nvar _escapeRegexp = __webpack_require__(/*! ../../escape-regexp */ \"./node_modules/next/dist/shared/lib/escape-regexp.js\");\nvar _parseUrl = __webpack_require__(/*! ./parse-url */ \"./node_modules/next/dist/shared/lib/router/utils/parse-url.js\");\n/**\n * Ensure only a-zA-Z are used for param names for proper interpolating\n * with path-to-regexp\n */ function getSafeParamName(paramName) {\n    var newParamName = \"\";\n    for(var i = 0; i < paramName.length; i++){\n        var charCode = paramName.charCodeAt(i);\n        if (charCode > 64 && charCode < 91 || charCode > 96 && charCode < 123 // a-z\n        ) {\n            newParamName += paramName[i];\n        }\n    }\n    return newParamName;\n}\nfunction escapeSegment(str, segmentName) {\n    return str.replace(new RegExp(\":\".concat((0, _escapeRegexp).escapeStringRegexp(segmentName)), \"g\"), \"__ESC_COLON_\".concat(segmentName));\n}\nfunction unescapeSegments(str) {\n    return str.replace(/__ESC_COLON_/gi, \":\");\n}\nfunction matchHas(req, query) {\n    var has = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], missing = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];\n    var params = {};\n    var hasMatch = function(hasItem) {\n        var value;\n        var key = hasItem.key;\n        switch(hasItem.type){\n            case \"header\":\n                {\n                    key = key.toLowerCase();\n                    value = req.headers[key];\n                    break;\n                }\n            case \"cookie\":\n                {\n                    value = req.cookies[hasItem.key];\n                    break;\n                }\n            case \"query\":\n                {\n                    value = query[key];\n                    break;\n                }\n            case \"host\":\n                {\n                    var host = ((req == null ? void 0 : req.headers) || {}).host;\n                    // remove port from host if present\n                    var hostname = host == null ? void 0 : host.split(\":\")[0].toLowerCase();\n                    value = hostname;\n                    break;\n                }\n            default:\n                {\n                    break;\n                }\n        }\n        if (!hasItem.value && value) {\n            params[getSafeParamName(key)] = value;\n            return true;\n        } else if (value) {\n            var matcher = new RegExp(\"^\".concat(hasItem.value, \"$\"));\n            var matches = Array.isArray(value) ? value.slice(-1)[0].match(matcher) : value.match(matcher);\n            if (matches) {\n                if (Array.isArray(matches)) {\n                    if (matches.groups) {\n                        Object.keys(matches.groups).forEach(function(groupKey) {\n                            params[groupKey] = matches.groups[groupKey];\n                        });\n                    } else if (hasItem.type === \"host\" && matches[0]) {\n                        params.host = matches[0];\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    };\n    var allMatch = has.every(function(item) {\n        return hasMatch(item);\n    }) && !missing.some(function(item) {\n        return hasMatch(item);\n    });\n    if (allMatch) {\n        return params;\n    }\n    return false;\n}\nfunction compileNonPath(value, params) {\n    if (!value.includes(\":\")) {\n        return value;\n    }\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = Object.keys(params)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var key = _step.value;\n            if (value.includes(\":\".concat(key))) {\n                value = value.replace(new RegExp(\":\".concat(key, \"\\\\*\"), \"g\"), \":\".concat(key, \"--ESCAPED_PARAM_ASTERISKS\")).replace(new RegExp(\":\".concat(key, \"\\\\?\"), \"g\"), \":\".concat(key, \"--ESCAPED_PARAM_QUESTION\")).replace(new RegExp(\":\".concat(key, \"\\\\+\"), \"g\"), \":\".concat(key, \"--ESCAPED_PARAM_PLUS\")).replace(new RegExp(\":\".concat(key, \"(?!\\\\w)\"), \"g\"), \"--ESCAPED_PARAM_COLON\".concat(key));\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    value = value.replace(/(:|\\*|\\?|\\+|\\(|\\)|\\{|\\})/g, \"\\\\$1\").replace(/--ESCAPED_PARAM_PLUS/g, \"+\").replace(/--ESCAPED_PARAM_COLON/g, \":\").replace(/--ESCAPED_PARAM_QUESTION/g, \"?\").replace(/--ESCAPED_PARAM_ASTERISKS/g, \"*\");\n    // the value needs to start with a forward-slash to be compiled\n    // correctly\n    return (0, _pathToRegexp).compile(\"/\".concat(value), {\n        validate: false\n    })(params).slice(1);\n}\nfunction prepareDestination(args) {\n    var query = Object.assign({}, args.query);\n    delete query.__nextLocale;\n    delete query.__nextDefaultLocale;\n    delete query.__nextDataReq;\n    var escapedDestination = args.destination;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = Object.keys(_extends({}, args.params, query))[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var param = _step.value;\n            escapedDestination = escapeSegment(escapedDestination, param);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var parsedDestination = (0, _parseUrl).parseUrl(escapedDestination);\n    var destQuery = parsedDestination.query;\n    var destPath = unescapeSegments(\"\".concat(parsedDestination.pathname).concat(parsedDestination.hash || \"\"));\n    var destHostname = unescapeSegments(parsedDestination.hostname || \"\");\n    var destPathParamKeys = [];\n    var destHostnameParamKeys = [];\n    (0, _pathToRegexp).pathToRegexp(destPath, destPathParamKeys);\n    (0, _pathToRegexp).pathToRegexp(destHostname, destHostnameParamKeys);\n    var destParams = [];\n    destPathParamKeys.forEach(function(key) {\n        return destParams.push(key.name);\n    });\n    destHostnameParamKeys.forEach(function(key) {\n        return destParams.push(key.name);\n    });\n    var destPathCompiler = (0, _pathToRegexp).compile(destPath, // have already validated before we got to this point and validating\n    // breaks compiling destinations with named pattern params from the source\n    // e.g. /something:hello(.*) -> /another/:hello is broken with validation\n    // since compile validation is meant for reversing and not for inserting\n    // params from a separate path-regex into another\n    {\n        validate: false\n    });\n    var destHostnameCompiler = (0, _pathToRegexp).compile(destHostname, {\n        validate: false\n    });\n    var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n    try {\n        // update any params in query values\n        for(var _iterator1 = Object.entries(destQuery)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n            var _value = _slicedToArray(_step1.value, 2), key1 = _value[0], strOrArray = _value[1];\n            // the value needs to start with a forward-slash to be compiled\n            // correctly\n            if (Array.isArray(strOrArray)) {\n                destQuery[key1] = strOrArray.map(function(value) {\n                    return compileNonPath(unescapeSegments(value), args.params);\n                });\n            } else {\n                destQuery[key1] = compileNonPath(unescapeSegments(strOrArray), args.params);\n            }\n        }\n    } catch (err) {\n        _didIteratorError1 = true;\n        _iteratorError1 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                _iterator1.return();\n            }\n        } finally{\n            if (_didIteratorError1) {\n                throw _iteratorError1;\n            }\n        }\n    }\n    // add path params to query if it's not a redirect and not\n    // already defined in destination query or path\n    var paramKeys = Object.keys(args.params).filter(function(name) {\n        return name !== \"nextInternalLocale\";\n    });\n    if (args.appendParamsToQuery && !paramKeys.some(function(key) {\n        return destParams.includes(key);\n    })) {\n        var _iteratorNormalCompletion2 = true, _didIteratorError2 = false, _iteratorError2 = undefined;\n        try {\n            for(var _iterator2 = paramKeys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){\n                var key = _step2.value;\n                if (!(key in destQuery)) {\n                    destQuery[key] = args.params[key];\n                }\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                    _iterator2.return();\n                }\n            } finally{\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n    }\n    var newUrl;\n    try {\n        newUrl = destPathCompiler(args.params);\n        var ref = _slicedToArray(newUrl.split(\"#\"), 2), pathname = ref[0], hash = ref[1];\n        parsedDestination.hostname = destHostnameCompiler(args.params);\n        parsedDestination.pathname = pathname;\n        parsedDestination.hash = \"\".concat(hash ? \"#\" : \"\").concat(hash || \"\");\n        delete parsedDestination.search;\n    } catch (err1) {\n        if (err1.message.match(/Expected .*? to not repeat, but got an array/)) {\n            throw new Error(\"To use a multi-match in the destination you must add `*` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match\");\n        }\n        throw err1;\n    }\n    // Query merge order lowest priority to highest\n    // 1. initial URL query values\n    // 2. path segment values\n    // 3. destination specified query values\n    parsedDestination.query = _extends({}, query, parsedDestination.query);\n    return {\n        newUrl: newUrl,\n        destQuery: destQuery,\n        parsedDestination: parsedDestination\n    };\n} //# sourceMappingURL=prepare-destination.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/utils/prepare-destination.js\n"));

/***/ }),

/***/ "./pages/campaigns/new.js":
/*!********************************!*\
  !*** ./pages/campaigns/new.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_assert_this_initialized_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @swc/helpers/src/_assert_this_initialized.mjs */ \"./node_modules/@swc/helpers/src/_assert_this_initialized.mjs\");\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @swc/helpers/src/_async_to_generator.mjs */ \"./node_modules/@swc/helpers/src/_async_to_generator.mjs\");\n/* harmony import */ var _swc_helpers_src_class_call_check_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @swc/helpers/src/_class_call_check.mjs */ \"./node_modules/@swc/helpers/src/_class_call_check.mjs\");\n/* harmony import */ var _swc_helpers_src_create_class_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @swc/helpers/src/_create_class.mjs */ \"./node_modules/@swc/helpers/src/_create_class.mjs\");\n/* harmony import */ var _swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @swc/helpers/src/_define_property.mjs */ \"./node_modules/@swc/helpers/src/_define_property.mjs\");\n/* harmony import */ var _swc_helpers_src_inherits_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/src/_inherits.mjs */ \"./node_modules/@swc/helpers/src/_inherits.mjs\");\n/* harmony import */ var _swc_helpers_src_create_super_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @swc/helpers/src/_create_super.mjs */ \"./node_modules/@swc/helpers/src/_create_super.mjs\");\n/* harmony import */ var _swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @swc/helpers/src/_ts_generator.mjs */ \"./node_modules/@swc/helpers/src/_ts_generator.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/Layout */ \"./components/Layout.js\");\n/* harmony import */ var semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! semantic-ui-react */ \"./node_modules/semantic-ui-react/dist/es/index.js\");\n/* harmony import */ var _ethereum_web3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ethereum/web3 */ \"./ethereum/web3.js\");\n/* harmony import */ var _ethereum_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ethereum/factory */ \"./ethereum/factory.js\");\n/* harmony import */ var next_dist_server_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/router */ \"./node_modules/next/dist/server/router.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar CampaignNew = /*#__PURE__*/ function(Component) {\n    \"use strict\";\n    (0,_swc_helpers_src_inherits_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(CampaignNew, Component);\n    var _super = (0,_swc_helpers_src_create_super_mjs__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(CampaignNew);\n    function CampaignNew() {\n        (0,_swc_helpers_src_class_call_check_mjs__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(this, CampaignNew);\n        var _this;\n        _this = _super.apply(this, arguments);\n        var _this1 = (0,_swc_helpers_src_assert_this_initialized_mjs__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_this);\n        (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_10__[\"default\"])((0,_swc_helpers_src_assert_this_initialized_mjs__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_this), \"onSubmit\", function() {\n            var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(function(event) {\n                var accounts, err;\n                return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(this, function(_state) {\n                    switch(_state.label){\n                        case 0:\n                            event.preventDefault();\n                            _this1.setState({\n                                loading: true,\n                                errorMessage: \"\"\n                            });\n                            _state.label = 1;\n                        case 1:\n                            _state.trys.push([\n                                1,\n                                4,\n                                ,\n                                5\n                            ]);\n                            return [\n                                4,\n                                _ethereum_web3__WEBPACK_IMPORTED_MODULE_3__[\"default\"].eth.getAccounts()\n                            ];\n                        case 2:\n                            accounts = _state.sent();\n                            return [\n                                4,\n                                _ethereum_factory__WEBPACK_IMPORTED_MODULE_4__[\"default\"].methods.createCampaign(_this1.state.minimumContribution).send({\n                                    from: accounts[0]\n                                })\n                            ];\n                        case 3:\n                            _state.sent();\n                            return [\n                                3,\n                                5\n                            ];\n                        case 4:\n                            err = _state.sent();\n                            _this1.setState({\n                                errorMessage: err.message\n                            });\n                            return [\n                                3,\n                                5\n                            ];\n                        case 5:\n                            _this1.setState({\n                                loading: false\n                            });\n                            return [\n                                2\n                            ];\n                    }\n                });\n            });\n            return function(event) {\n                return _ref.apply(this, arguments);\n            };\n        }());\n        return _this;\n    }\n    (0,_swc_helpers_src_create_class_mjs__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(CampaignNew, [\n        {\n            key: \"state\",\n            value: function state() {\n                minimumContribution: \"\";\n                errorMessage: \"\";\n                loading: false;\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this = this;\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Layout__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            children: \" Create a new Campaign\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                            lineNumber: 35,\n                            columnNumber: 9\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__.Form, {\n                            onSubmit: this.onSubmit,\n                            error: this.state.errorMessage,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__.Form.Field, {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            children: \"Minimum Contribution\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                                            lineNumber: 38,\n                                            columnNumber: 13\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__.Input, {\n                                            label: \"wei\",\n                                            labelPosition: \"right\",\n                                            value: this.state.minimumContribution,\n                                            onChange: function(event) {\n                                                _this.setState({\n                                                    minimumContribution: event.target.value\n                                                });\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                                            lineNumber: 39,\n                                            columnNumber: 13\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                                    lineNumber: 37,\n                                    columnNumber: 11\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__.Message, {\n                                    error: true,\n                                    header: \"Error\",\n                                    content: this.state.errorMessage\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                                    lineNumber: 50,\n                                    columnNumber: 11\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(semantic_ui_react__WEBPACK_IMPORTED_MODULE_14__.Button, {\n                                    primary: true,\n                                    loading: this.state.loading,\n                                    children: \"Create\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                                    lineNumber: 55,\n                                    columnNumber: 11\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                            lineNumber: 36,\n                            columnNumber: 9\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\ADMIN\\\\Ethereum_and_Solidity_The_Complete_Developer's_Guide\\\\kickstart\\\\pages\\\\campaigns\\\\new.js\",\n                    lineNumber: 34,\n                    columnNumber: 7\n                }, this);\n            }\n        }\n    ]);\n    return CampaignNew;\n}(react__WEBPACK_IMPORTED_MODULE_1__.Component);\n/* harmony default export */ __webpack_exports__[\"default\"] = (CampaignNew);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9jYW1wYWlnbnMvbmV3LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7QUFBeUM7QUFDSTtBQUNvQjtBQUMxQjtBQUNNO0FBQ0c7QUFFaEQsZUFBaUIsaUJBd0RoQjs7OEVBeERLVSxXQUFXOytGQUFYQSxXQUFXO2FBQVhBLFdBQVc7Z0dBQVhBLFdBQVc7Ozs7UUFPZkMsaUZBQUFBLENBQUFBLHdGQUFBQSxTQUFBQSxVQUFRO3VCQUFHLDhGQUFPQyxLQUFLLEVBQUs7b0JBTWxCQyxRQUFRLEVBSVBDLEdBQUc7Ozs7NEJBVFpGLEtBQUssQ0FBQ0csY0FBYyxFQUFFLENBQUM7NEJBRXZCLE9BQUtDLFFBQVEsQ0FBQztnQ0FBRUMsT0FBTyxFQUFFLElBQUk7Z0NBQUVDLFlBQVksRUFBRSxFQUFFOzZCQUFFLENBQUMsQ0FBQzs7Ozs7Ozs7OzRCQUdoQzs7Z0NBQU1YLHNFQUFvQixFQUFFOzhCQUFBOzs0QkFBdkNNLFFBQVEsR0FBRyxhQUE0Qjs0QkFDN0M7O2dDQUFNTCxnRkFDVyxDQUFDLE9BQUtlLEtBQUssQ0FBQ0MsbUJBQW1CLENBQUMsQ0FDOUNDLElBQUksQ0FBQztvQ0FBRUMsSUFBSSxFQUFFYixRQUFRLENBQUMsQ0FBQyxDQUFDO2lDQUFFLENBQUM7OEJBQUE7OzRCQUY5QixhQUU4QixDQUFDOzs7Ozs7NEJBQ3hCQyxHQUFHOzRCQUNWLE9BQUtFLFFBQVEsQ0FBQztnQ0FBRUUsWUFBWSxFQUFFSixHQUFHLENBQUNhLE9BQU87NkJBQUUsQ0FBQyxDQUFDOzs7Ozs7NEJBRy9DLE9BQUtYLFFBQVEsQ0FBQztnQ0FBRUMsT0FBTyxFQUFFLEtBQUs7NkJBQUUsQ0FBQyxDQUFDOzs7Ozs7WUFDcEMsQ0FBQzs0QkFmaUJMLEtBQUs7OztZQWVyQjs7O21GQXRCRUYsV0FBVzs7WUFDZmEsR0FBSyxFQUFMQSxPQUFLO21CQUFMQSxTQUFBQSxLQUFLLEdBQUc7Z0JBQ05DLG1CQUFtQixFQUFFLEVBQUUsQ0FBQztnQkFDeEJOLFlBQVksRUFBRSxFQUFFLENBQUM7Z0JBQ2pCRCxPQUFPLEVBQUUsS0FBSyxDQUFDO1lBQ2pCLENBQUM7OztZQW1CRFcsR0FBTSxFQUFOQSxRQUFNO21CQUFOQSxTQUFBQSxNQUFNLEdBQUc7O2dCQUNQLHFCQUNFLDhEQUFDMUIsMERBQU07O3NDQUNMLDhEQUFDMkIsSUFBRTtzQ0FBQyx3QkFBc0I7Ozs7O2dDQUFLO3NDQUMvQiw4REFBQzFCLG9EQUFJOzRCQUFDUSxRQUFRLEVBQUUsSUFBSSxDQUFDQSxRQUFROzRCQUFFbUIsS0FBSyxFQUFFLElBQUksQ0FBQ1AsS0FBSyxDQUFDTCxZQUFZOzs4Q0FDM0QsOERBQUNmLDBEQUFVOztzREFDVCw4REFBQzZCLE9BQUs7c0RBQUMsc0JBQW9COzs7OztnREFBUTtzREFDbkMsOERBQUMzQixxREFBSzs0Q0FDSjJCLEtBQUssRUFBQyxLQUFLOzRDQUNYQyxhQUFhLEVBQUMsT0FBTzs0Q0FDckJDLEtBQUssRUFBRSxJQUFJLENBQUNYLEtBQUssQ0FBQ0MsbUJBQW1COzRDQUNyQ1csUUFBUSxFQUFFLFNBQUN2QixLQUFLLEVBQUs7Z0RBQ25CLE1BQUtJLFFBQVEsQ0FBQztvREFDWlEsbUJBQW1CLEVBQUVaLEtBQUssQ0FBQ3dCLE1BQU0sQ0FBQ0YsS0FBSztpREFDeEMsQ0FBQyxDQUFDOzRDQUNMLENBQUM7Ozs7O2dEQUNNOzs7Ozs7d0NBQ0U7OENBQ2IsOERBQUM1Qix1REFBTztvQ0FDTndCLEtBQUs7b0NBQ0xPLE1BQU0sRUFBQyxPQUFPO29DQUNkQyxPQUFPLEVBQUUsSUFBSSxDQUFDZixLQUFLLENBQUNMLFlBQVk7Ozs7O3dDQUN2Qjs4Q0FDWCw4REFBQ2Qsc0RBQU07b0NBQUNtQyxPQUFPO29DQUFDdEIsT0FBTyxFQUFFLElBQUksQ0FBQ00sS0FBSyxDQUFDTixPQUFPOzhDQUFFLFFBRTdDOzs7Ozt3Q0FBUzs7Ozs7O2dDQUNKOzs7Ozs7d0JBQ0EsQ0FDVDtZQUNKLENBQUM7OztXQXJER1AsV0FBVztDQXNEaEIsQ0F0RHlCVCw0Q0FBUyxDQXNEbEM7QUFFRCwrREFBZVMsV0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL2NhbXBhaWducy9uZXcuanM/YmQ1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XHJcbmltcG9ydCB7IEZvcm0sIEJ1dHRvbiwgSW5wdXQsIE1lc3NhZ2UgfSBmcm9tIFwic2VtYW50aWMtdWktcmVhY3RcIjtcclxuaW1wb3J0IHdlYjMgZnJvbSBcIi4uLy4uL2V0aGVyZXVtL3dlYjNcIjtcclxuaW1wb3J0IGZhY3RvcnkgZnJvbSBcIi4uLy4uL2V0aGVyZXVtL2ZhY3RvcnlcIjtcclxuaW1wb3J0IHsgUm91dGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZXJcIjtcclxuXHJcbmNsYXNzIENhbXBhaWduTmV3IGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBzdGF0ZSgpIHtcclxuICAgIG1pbmltdW1Db250cmlidXRpb246IFwiXCI7XHJcbiAgICBlcnJvck1lc3NhZ2U6IFwiXCI7XHJcbiAgICBsb2FkaW5nOiBmYWxzZTtcclxuICB9XHJcblxyXG4gIG9uU3VibWl0ID0gYXN5bmMgKGV2ZW50KSA9PiB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIHRoaXMuc2V0U3RhdGUoeyBsb2FkaW5nOiB0cnVlLCBlcnJvck1lc3NhZ2U6IFwiXCIgfSk7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCB3ZWIzLmV0aC5nZXRBY2NvdW50cygpO1xyXG4gICAgICBhd2FpdCBmYWN0b3J5Lm1ldGhvZHNcclxuICAgICAgICAuY3JlYXRlQ2FtcGFpZ24odGhpcy5zdGF0ZS5taW5pbXVtQ29udHJpYnV0aW9uKVxyXG4gICAgICAgIC5zZW5kKHsgZnJvbTogYWNjb3VudHNbMF0gfSk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGVycm9yTWVzc2FnZTogZXJyLm1lc3NhZ2UgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5zZXRTdGF0ZSh7IGxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gIH07XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxMYXlvdXQ+XHJcbiAgICAgICAgPGgzPiBDcmVhdGUgYSBuZXcgQ2FtcGFpZ248L2gzPlxyXG4gICAgICAgIDxGb3JtIG9uU3VibWl0PXt0aGlzLm9uU3VibWl0fSBlcnJvcj17dGhpcy5zdGF0ZS5lcnJvck1lc3NhZ2V9PlxyXG4gICAgICAgICAgPEZvcm0uRmllbGQ+XHJcbiAgICAgICAgICAgIDxsYWJlbD5NaW5pbXVtIENvbnRyaWJ1dGlvbjwvbGFiZWw+XHJcbiAgICAgICAgICAgIDxJbnB1dFxyXG4gICAgICAgICAgICAgIGxhYmVsPVwid2VpXCJcclxuICAgICAgICAgICAgICBsYWJlbFBvc2l0aW9uPVwicmlnaHRcIlxyXG4gICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLm1pbmltdW1Db250cmlidXRpb259XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9eyhldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgIG1pbmltdW1Db250cmlidXRpb246IGV2ZW50LnRhcmdldC52YWx1ZSxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgID48L0lucHV0PlxyXG4gICAgICAgICAgPC9Gb3JtLkZpZWxkPlxyXG4gICAgICAgICAgPE1lc3NhZ2VcclxuICAgICAgICAgICAgZXJyb3JcclxuICAgICAgICAgICAgaGVhZGVyPVwiRXJyb3JcIlxyXG4gICAgICAgICAgICBjb250ZW50PXt0aGlzLnN0YXRlLmVycm9yTWVzc2FnZX1cclxuICAgICAgICAgID48L01lc3NhZ2U+XHJcbiAgICAgICAgICA8QnV0dG9uIHByaW1hcnkgbG9hZGluZz17dGhpcy5zdGF0ZS5sb2FkaW5nfT5cclxuICAgICAgICAgICAgQ3JlYXRlXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L0Zvcm0+XHJcbiAgICAgIDwvTGF5b3V0PlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhbXBhaWduTmV3O1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJDb21wb25lbnQiLCJMYXlvdXQiLCJGb3JtIiwiQnV0dG9uIiwiSW5wdXQiLCJNZXNzYWdlIiwid2ViMyIsImZhY3RvcnkiLCJSb3V0ZSIsIkNhbXBhaWduTmV3Iiwib25TdWJtaXQiLCJldmVudCIsImFjY291bnRzIiwiZXJyIiwicHJldmVudERlZmF1bHQiLCJzZXRTdGF0ZSIsImxvYWRpbmciLCJlcnJvck1lc3NhZ2UiLCJldGgiLCJnZXRBY2NvdW50cyIsIm1ldGhvZHMiLCJjcmVhdGVDYW1wYWlnbiIsInN0YXRlIiwibWluaW11bUNvbnRyaWJ1dGlvbiIsInNlbmQiLCJmcm9tIiwibWVzc2FnZSIsInJlbmRlciIsImgzIiwiZXJyb3IiLCJGaWVsZCIsImxhYmVsIiwibGFiZWxQb3NpdGlvbiIsInZhbHVlIiwib25DaGFuZ2UiLCJ0YXJnZXQiLCJoZWFkZXIiLCJjb250ZW50IiwicHJpbWFyeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/campaigns/new.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/path-to-regexp/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-to-regexp/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \" + i);\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \" + j);\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \" + i);\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \" + i);\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        // tslint:disable-next-line\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\nexports.parse = parse;\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\nexports.compile = compile;\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n        }\n        return path;\n    };\n}\nexports.tokensToFunction = tokensToFunction;\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\nexports.match = match;\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            // tslint:disable-next-line\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\nexports.regexpToFunction = regexpToFunction;\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    // Use a negative lookahead to match only capturing groups.\n    var groups = path.source.match(/\\((?!\\?)/g);\n    if (groups) {\n        for (var i = 0; i < groups.length; i++) {\n            keys.push({\n                name: i,\n                prefix: \"\",\n                suffix: \"\",\n                modifier: \"\",\n                pattern: \"\"\n            });\n        }\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;\n    var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n    var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n                    }\n                    else {\n                        route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n                    }\n                }\n                else {\n                    route += \"(\" + token.pattern + \")\" + token.modifier;\n                }\n            }\n            else {\n                route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += delimiter + \"?\";\n        route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n            : // tslint:disable-next-line\n                endToken === undefined;\n        if (!strict) {\n            route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n        }\n    }\n    return new RegExp(route, flags(options));\n}\nexports.tokensToRegexp = tokensToRegexp;\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\nexports.pathToRegexp = pathToRegexp;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/path-to-regexp/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/request-meta.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/server/request-meta.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getRequestMeta = getRequestMeta;\nexports.setRequestMeta = setRequestMeta;\nexports.addRequestMeta = addRequestMeta;\nexports.getNextInternalQuery = getNextInternalQuery;\nexports.NEXT_REQUEST_META = void 0;\nconst NEXT_REQUEST_META = Symbol(\"NextRequestMeta\");\nexports.NEXT_REQUEST_META = NEXT_REQUEST_META;\nfunction getRequestMeta(req, key) {\n    const meta = req[NEXT_REQUEST_META] || {};\n    return typeof key === \"string\" ? meta[key] : meta;\n}\nfunction setRequestMeta(req, meta) {\n    req[NEXT_REQUEST_META] = meta;\n    return getRequestMeta(req);\n}\nfunction addRequestMeta(request, key, value) {\n    const meta = getRequestMeta(request);\n    meta[key] = value;\n    return setRequestMeta(request, meta);\n}\nfunction getNextInternalQuery(query) {\n    const keysToInclude = [\n        \"__nextDefaultLocale\",\n        \"__nextFallback\",\n        \"__nextLocale\",\n        \"__nextSsgPath\",\n        \"_nextBubbleNoFallback\",\n        \"__nextDataReq\", \n    ];\n    const nextInternalQuery = {};\n    for (const key of keysToInclude){\n        if (key in query) {\n            // @ts-ignore this can't be typed correctly\n            nextInternalQuery[key] = query[key];\n        }\n    }\n    return nextInternalQuery;\n}\n\n//# sourceMappingURL=request-meta.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9yZXF1ZXN0LW1ldGEuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixzQkFBc0I7QUFDdEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qiw0QkFBNEI7QUFDNUIseUJBQXlCO0FBQ3pCO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3JlcXVlc3QtbWV0YS5qcz80YmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXRSZXF1ZXN0TWV0YSA9IGdldFJlcXVlc3RNZXRhO1xuZXhwb3J0cy5zZXRSZXF1ZXN0TWV0YSA9IHNldFJlcXVlc3RNZXRhO1xuZXhwb3J0cy5hZGRSZXF1ZXN0TWV0YSA9IGFkZFJlcXVlc3RNZXRhO1xuZXhwb3J0cy5nZXROZXh0SW50ZXJuYWxRdWVyeSA9IGdldE5leHRJbnRlcm5hbFF1ZXJ5O1xuZXhwb3J0cy5ORVhUX1JFUVVFU1RfTUVUQSA9IHZvaWQgMDtcbmNvbnN0IE5FWFRfUkVRVUVTVF9NRVRBID0gU3ltYm9sKFwiTmV4dFJlcXVlc3RNZXRhXCIpO1xuZXhwb3J0cy5ORVhUX1JFUVVFU1RfTUVUQSA9IE5FWFRfUkVRVUVTVF9NRVRBO1xuZnVuY3Rpb24gZ2V0UmVxdWVzdE1ldGEocmVxLCBrZXkpIHtcbiAgICBjb25zdCBtZXRhID0gcmVxW05FWFRfUkVRVUVTVF9NRVRBXSB8fCB7fTtcbiAgICByZXR1cm4gdHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIiA/IG1ldGFba2V5XSA6IG1ldGE7XG59XG5mdW5jdGlvbiBzZXRSZXF1ZXN0TWV0YShyZXEsIG1ldGEpIHtcbiAgICByZXFbTkVYVF9SRVFVRVNUX01FVEFdID0gbWV0YTtcbiAgICByZXR1cm4gZ2V0UmVxdWVzdE1ldGEocmVxKTtcbn1cbmZ1bmN0aW9uIGFkZFJlcXVlc3RNZXRhKHJlcXVlc3QsIGtleSwgdmFsdWUpIHtcbiAgICBjb25zdCBtZXRhID0gZ2V0UmVxdWVzdE1ldGEocmVxdWVzdCk7XG4gICAgbWV0YVtrZXldID0gdmFsdWU7XG4gICAgcmV0dXJuIHNldFJlcXVlc3RNZXRhKHJlcXVlc3QsIG1ldGEpO1xufVxuZnVuY3Rpb24gZ2V0TmV4dEludGVybmFsUXVlcnkocXVlcnkpIHtcbiAgICBjb25zdCBrZXlzVG9JbmNsdWRlID0gW1xuICAgICAgICBcIl9fbmV4dERlZmF1bHRMb2NhbGVcIixcbiAgICAgICAgXCJfX25leHRGYWxsYmFja1wiLFxuICAgICAgICBcIl9fbmV4dExvY2FsZVwiLFxuICAgICAgICBcIl9fbmV4dFNzZ1BhdGhcIixcbiAgICAgICAgXCJfbmV4dEJ1YmJsZU5vRmFsbGJhY2tcIixcbiAgICAgICAgXCJfX25leHREYXRhUmVxXCIsIFxuICAgIF07XG4gICAgY29uc3QgbmV4dEludGVybmFsUXVlcnkgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzVG9JbmNsdWRlKXtcbiAgICAgICAgaWYgKGtleSBpbiBxdWVyeSkge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSB0aGlzIGNhbid0IGJlIHR5cGVkIGNvcnJlY3RseVxuICAgICAgICAgICAgbmV4dEludGVybmFsUXVlcnlba2V5XSA9IHF1ZXJ5W2tleV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5leHRJbnRlcm5hbFF1ZXJ5O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LW1ldGEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/request-meta.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/server/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/server/router.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _requestMeta = __webpack_require__(/*! ./request-meta */ \"./node_modules/next/dist/server/request-meta.js\");\nvar _pathMatch = __webpack_require__(/*! ../shared/lib/router/utils/path-match */ \"./node_modules/next/dist/shared/lib/router/utils/path-match.js\");\nvar _removeTrailingSlash = __webpack_require__(/*! ../shared/lib/router/utils/remove-trailing-slash */ \"./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../shared/lib/i18n/normalize-locale-path */ \"./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js\");\nvar _prepareDestination = __webpack_require__(/*! ../shared/lib/router/utils/prepare-destination */ \"./node_modules/next/dist/shared/lib/router/utils/prepare-destination.js\");\nvar _removePathPrefix = __webpack_require__(/*! ../shared/lib/router/utils/remove-path-prefix */ \"./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js\");\nvar _formatNextPathnameInfo = __webpack_require__(/*! ../shared/lib/router/utils/format-next-pathname-info */ \"./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js\");\nvar _getNextPathnameInfo = __webpack_require__(/*! ../shared/lib/router/utils/get-next-pathname-info */ \"./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js\");\nclass Router {\n    /**\n   * context stores information used by the router.\n   */ context = new WeakMap();\n    constructor({ headers =[] , fsRoutes =[] , rewrites ={\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: []\n    } , redirects =[] , catchAllRoute , catchAllMiddleware =[] , dynamicRoutes =[] , pageChecker , useFileSystemPublicRoutes , nextConfig  }){\n        this.nextConfig = nextConfig;\n        this.headers = headers;\n        this.fsRoutes = [\n            ...fsRoutes\n        ];\n        this.rewrites = rewrites;\n        this.redirects = redirects;\n        this.pageChecker = pageChecker;\n        this.catchAllRoute = catchAllRoute;\n        this.catchAllMiddleware = catchAllMiddleware;\n        this.dynamicRoutes = dynamicRoutes;\n        this.useFileSystemPublicRoutes = useFileSystemPublicRoutes;\n        // Perform the initial route compilation.\n        this.compiledRoutes = this.compileRoutes();\n        this.needsRecompilation = false;\n    }\n    async checkPage(req, pathname) {\n        pathname = (0, _normalizeLocalePath).normalizeLocalePath(pathname, this.locales).pathname;\n        const context = this.context.get(req);\n        if (!context) {\n            throw new Error(\"Invariant: request is not available inside the context, this is an internal error please open an issue.\");\n        }\n        if (context.pageChecks[pathname] !== undefined) {\n            return context.pageChecks[pathname];\n        }\n        const result = await this.pageChecker(pathname);\n        context.pageChecks[pathname] = result;\n        return result;\n    }\n    get locales() {\n        var ref;\n        return ((ref = this.nextConfig.i18n) == null ? void 0 : ref.locales) || [];\n    }\n    get basePath() {\n        return this.nextConfig.basePath || \"\";\n    }\n    setDynamicRoutes(dynamicRoutes) {\n        this.dynamicRoutes = dynamicRoutes;\n        this.needsRecompilation = true;\n    }\n    setCatchallMiddleware(catchAllMiddleware) {\n        this.catchAllMiddleware = catchAllMiddleware;\n        this.needsRecompilation = true;\n    }\n    addFsRoute(fsRoute) {\n        // We use unshift so that we're sure the routes is defined before Next's\n        // default routes.\n        this.fsRoutes.unshift(fsRoute);\n        this.needsRecompilation = true;\n    }\n    compileRoutes() {\n        /*\n        Desired routes order\n        - headers\n        - redirects\n        - Check filesystem (including pages), if nothing found continue\n        - User rewrites (checking filesystem and pages each match)\n      */ const [middlewareCatchAllRoute] = this.catchAllMiddleware;\n        return [\n            ...middlewareCatchAllRoute ? this.fsRoutes.filter((route)=>route.name === \"_next/data catchall\").map((route)=>({\n                    ...route,\n                    name: \"_next/data normalizing\",\n                    check: false\n                })) : [],\n            ...this.headers,\n            ...this.redirects,\n            ...this.useFileSystemPublicRoutes && middlewareCatchAllRoute ? [\n                middlewareCatchAllRoute\n            ] : [],\n            ...this.rewrites.beforeFiles,\n            ...this.fsRoutes,\n            // We only check the catch-all route if public page routes hasn't been\n            // disabled\n            ...this.useFileSystemPublicRoutes ? [\n                {\n                    type: \"route\",\n                    name: \"page checker\",\n                    match: (0, _pathMatch).getPathMatch(\"/:path*\"),\n                    fn: async (req, res, params, parsedUrl, upgradeHead)=>{\n                        const pathname = (0, _removeTrailingSlash).removeTrailingSlash(parsedUrl.pathname || \"/\");\n                        if (!pathname) {\n                            return {\n                                finished: false\n                            };\n                        }\n                        if (await this.checkPage(req, pathname)) {\n                            return this.catchAllRoute.fn(req, res, params, parsedUrl, upgradeHead);\n                        }\n                        return {\n                            finished: false\n                        };\n                    }\n                }, \n            ] : [],\n            ...this.rewrites.afterFiles,\n            ...this.rewrites.fallback.length ? [\n                {\n                    type: \"route\",\n                    name: \"dynamic route/page check\",\n                    match: (0, _pathMatch).getPathMatch(\"/:path*\"),\n                    fn: async (req, res, _params, parsedCheckerUrl, upgradeHead)=>{\n                        return {\n                            finished: await this.checkFsRoutes(req, res, parsedCheckerUrl, upgradeHead)\n                        };\n                    }\n                },\n                ...this.rewrites.fallback, \n            ] : [],\n            // We only check the catch-all route if public page routes hasn't been\n            // disabled\n            ...this.useFileSystemPublicRoutes ? [\n                this.catchAllRoute\n            ] : [], \n        ];\n    }\n    async checkFsRoutes(req, res, parsedUrl, upgradeHead) {\n        const originalFsPathname = parsedUrl.pathname;\n        const fsPathname = (0, _removePathPrefix).removePathPrefix(originalFsPathname, this.basePath);\n        for (const route of this.fsRoutes){\n            const params = route.match(fsPathname);\n            if (params) {\n                parsedUrl.pathname = fsPathname;\n                const { finished  } = await route.fn(req, res, params, parsedUrl);\n                if (finished) {\n                    return true;\n                }\n                parsedUrl.pathname = originalFsPathname;\n            }\n        }\n        let matchedPage = await this.checkPage(req, fsPathname);\n        // If we didn't match a page check dynamic routes\n        if (!matchedPage) {\n            const normalizedFsPathname = (0, _normalizeLocalePath).normalizeLocalePath(fsPathname, this.locales).pathname;\n            for (const dynamicRoute of this.dynamicRoutes){\n                if (dynamicRoute.match(normalizedFsPathname)) {\n                    matchedPage = true;\n                }\n            }\n        }\n        // Matched a page or dynamic route so render it using catchAllRoute\n        if (matchedPage) {\n            const params = this.catchAllRoute.match(parsedUrl.pathname);\n            if (!params) {\n                throw new Error(`Invariant: could not match params, this is an internal error please open an issue.`);\n            }\n            parsedUrl.pathname = fsPathname;\n            parsedUrl.query._nextBubbleNoFallback = \"1\";\n            const { finished  } = await this.catchAllRoute.fn(req, res, params, parsedUrl, upgradeHead);\n            return finished;\n        }\n        return false;\n    }\n    async execute(req, res, parsedUrl, upgradeHead) {\n        // Only recompile if the routes need to be recompiled, this should only\n        // happen in development.\n        if (this.needsRecompilation) {\n            this.compiledRoutes = this.compileRoutes();\n            this.needsRecompilation = false;\n        }\n        if (this.context.has(req)) {\n            throw new Error(`Invariant: request has already been processed: ${req.url}, this is an internal error please open an issue.`);\n        }\n        this.context.set(req, {\n            pageChecks: {}\n        });\n        try {\n            // Create a deep copy of the parsed URL.\n            const parsedUrlUpdated = {\n                ...parsedUrl,\n                query: {\n                    ...parsedUrl.query\n                }\n            };\n            for (const route of this.compiledRoutes){\n                var ref;\n                // only process rewrites for upgrade request\n                if (upgradeHead && route.type !== \"rewrite\") {\n                    continue;\n                }\n                const originalPathname = parsedUrlUpdated.pathname;\n                const pathnameInfo = (0, _getNextPathnameInfo).getNextPathnameInfo(originalPathname, {\n                    nextConfig: this.nextConfig,\n                    parseData: false\n                });\n                if (pathnameInfo.locale && !route.matchesLocaleAPIRoutes && pathnameInfo.pathname.match(/^\\/api(?:\\/|$)/)) {\n                    continue;\n                }\n                if ((0, _requestMeta).getRequestMeta(req, \"_nextHadBasePath\")) {\n                    pathnameInfo.basePath = this.basePath;\n                }\n                const basePath = pathnameInfo.basePath;\n                if (!route.matchesBasePath) {\n                    pathnameInfo.basePath = \"\";\n                }\n                if (route.matchesLocale && parsedUrlUpdated.query.__nextLocale && !pathnameInfo.locale) {\n                    pathnameInfo.locale = parsedUrlUpdated.query.__nextLocale;\n                }\n                if (!route.matchesLocale && pathnameInfo.locale === ((ref = this.nextConfig.i18n) == null ? void 0 : ref.defaultLocale) && pathnameInfo.locale) {\n                    pathnameInfo.locale = undefined;\n                }\n                if (route.matchesTrailingSlash && (0, _requestMeta).getRequestMeta(req, \"__nextHadTrailingSlash\")) {\n                    pathnameInfo.trailingSlash = true;\n                }\n                const matchPathname = (0, _formatNextPathnameInfo).formatNextPathnameInfo({\n                    ignorePrefix: true,\n                    ...pathnameInfo\n                });\n                let params = route.match(matchPathname);\n                if ((route.has || route.missing) && params) {\n                    const hasParams = (0, _prepareDestination).matchHas(req, parsedUrlUpdated.query, route.has, route.missing);\n                    if (hasParams) {\n                        Object.assign(params, hasParams);\n                    } else {\n                        params = false;\n                    }\n                }\n                /**\n         * If it is a matcher that doesn't match the basePath (like the public\n         * directory) but Next.js is configured to use a basePath that was\n         * never there, we consider this an invalid match and keep routing.\n         */ if (params && this.basePath && !route.matchesBasePath && !(0, _requestMeta).getRequestMeta(req, \"_nextDidRewrite\") && !basePath) {\n                    continue;\n                }\n                if (params) {\n                    const isNextDataNormalizing = route.name === \"_next/data normalizing\";\n                    if (isNextDataNormalizing) {\n                        (0, _requestMeta).addRequestMeta(req, \"_nextDataNormalizing\", true);\n                    }\n                    parsedUrlUpdated.pathname = matchPathname;\n                    const result = await route.fn(req, res, params, parsedUrlUpdated, upgradeHead);\n                    if (isNextDataNormalizing) {\n                        (0, _requestMeta).addRequestMeta(req, \"_nextDataNormalizing\", false);\n                    }\n                    if (result.finished) {\n                        return true;\n                    }\n                    if (result.pathname) {\n                        parsedUrlUpdated.pathname = result.pathname;\n                    } else {\n                        // since the fs route didn't finish routing we need to re-add the\n                        // basePath to continue checking with the basePath present\n                        parsedUrlUpdated.pathname = originalPathname;\n                    }\n                    if (result.query) {\n                        parsedUrlUpdated.query = {\n                            ...(0, _requestMeta).getNextInternalQuery(parsedUrlUpdated.query),\n                            ...result.query\n                        };\n                    }\n                    // check filesystem\n                    if (route.check && await this.checkFsRoutes(req, res, parsedUrlUpdated)) {\n                        return true;\n                    }\n                }\n            }\n            // All routes were tested, none were found.\n            return false;\n        } finally{\n            this.context.delete(req);\n        }\n    }\n}\nexports[\"default\"] = Router;\n\n//# sourceMappingURL=router.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/server/router.js\n"));

/***/ })

});